{"version":3,"sources":["js/module_11/setTimeout.js"],"names":["logger","time","console","log","timerId","setTimeout","shouldCancelTimer","Math","random","clearTimeout"],"mappings":";;;AA0CC,aA1CD,QAAA,wBA6BA,MAAMA,EAASC,IACbC,QAAQC,iBAAiBF,wCAGrBG,EAAUC,WAAWL,EAAQ,IAAM,KAEzCE,QAAQC,IAAIC,GAEZ,MAAME,EAAoBC,KAAKC,SAAW,GAC1CN,QAAQC,IAAIG,GAERA,GACFG,aAAaL","file":"setTimeout.c876c752.js","sourceRoot":"../src","sourcesContent":["import '../../sass/main.scss';\n\n/*\n * Метод setTimeout\n */\n\n// const logMessage = () => {\n//   console.log('Лог при вызове callback функции через 3 секунды');\n// };\n\n// console.log('Лог до вызова setTimeout');\n\n// setTimeout(\n//   x => {\n//     console.log(x);\n//     console.log('Внутри callback для setTimeout');\n//   },\n//   2000,\n//   'test args',\n// );\n\n// for (let index = 0; index < 10000; index++) {\n//   console.log(index);\n// }\n\n/*\n * Очистка setTimeout c clearTimeout(timeoutId)\n */\n\nconst logger = time => {\n  console.log(`Лог через ${time}ms, потому что не отменили таймаут`);\n};\n\nconst timerId = setTimeout(logger, 2000, 2000);\n\nconsole.log(timerId);\n\nconst shouldCancelTimer = Math.random() > 0.3;\nconsole.log(shouldCancelTimer);\n\nif (shouldCancelTimer) {\n  clearTimeout(timerId);\n}\n"]}